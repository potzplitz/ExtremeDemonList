name: Build und Veröffentlichen des Java-Projekts

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: write

env:
  MAJOR: ${{ env.MAJOR }}
  MINOR: ${{ env.MINOR }}
  PATCH: ${{ env.PATCH }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout des Codes
      uses: actions/checkout@v2

    - name: Setze JDK 17 ein
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Konfiguriere Git-Benutzer
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"

    - name: Erstelle Git-Tag
      run: git tag $(date +'%Y%m%d%H%M%S') -a -m "Generierter Tag von GitHub Actions"

    - name: Sende Tags
      run: git push --tags --quiet

    - name: Baue mit Maven
      run: mvn clean install

    - name: Erstelle Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ env.MAJOR }}.${{ env.MINOR }}.${{ env.PATCH }}
        release_name: Release v${{ env.MAJOR }}.${{ env.MINOR }}.${{ env.PATCH }}
        draft: false
        prerelease: false

    - name: Lade Artefakt zur Veröffentlichung hoch
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./target/ExtremeDemonList-${{ env.MAJOR }}.${{ env.MINOR }}.${{ env.PATCH }}-SNAPSHOT.jar
        asset_name: ExtremeDemonList-${{ env.MAJOR }}.${{ env.MINOR }}.${{ env.PATCH }}-SNAPSHOT.jar
        asset_content_type: application/java-archive
